{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","newMovie","props","addMovie","this","action","method","onSubmit","type","onChange","placeholder","required","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c396c49.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form\n        action=\"../api/movies.json\"\n        method=\"POST\"\n        className=\"NewMovie__form\"\n        onSubmit={this.handleSubmit}\n      >\n        <p>Add new Movie</p>\n        <input\n          type=\"text\"\n          name=\"title\"\n          className=\"NewMovie__form-item\"\n          value={title}\n          onChange={this.handleChange}\n          placeholder=\"write title\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          className=\"NewMovie__form-item\"\n          onChange={this.handleChange}\n          placeholder=\"add ImgUrl\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          className=\"NewMovie__form-item\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          placeholder=\"add imdbUrl\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          className=\"NewMovie__form-item\"\n          value={imdbId}\n          onChange={this.handleChange}\n          placeholder=\"add imdbId\"\n          required\n        />\n        <textarea\n          name=\"description\"\n          className=\"NewMovie__form-item\"\n          value={description}\n          onChange={this.handleChange}\n          placeholder=\"write description\"\n        />\n        <br />\n        <button type=\"submit\" className=\"NewMovie__form-btn\">Add</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}